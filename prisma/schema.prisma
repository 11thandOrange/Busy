generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Activity {
  id          Int           @id @default(autoincrement())
  content     String?
  apps        App[]         @relation("AppActivities")
  Analytics   Analytics[]
  createdAt   DateTime      @default(now())
}

model Category {
  id          Int           @id @default(autoincrement())
  content     String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  apps        App[]        @relation("AppCategories")
  widgets     Widget[]    @relation("WidgetCategories")
}

model Specification {
  id        Int     @id @default(autoincrement())
  content   String
  apps      App[]   @relation("AppSpecifications")
}

model App {
  id                        Int           @id @default(autoincrement())
  name                      String
  description_title         String?
  description_content       String?
  sliderImages              String?
  image                     String?
  slug                      String?
  categories                Category[]    @relation("AppCategories")
  activities                Activity[]    @relation("AppActivities")
  specifications  Specification[]  @relation("AppSpecifications")
  analytics    Analytics[] 
  Merchant      Merchant[] 
  createdAt                 DateTime      @default(now())
  updatedAt                 DateTime      @updatedAt
}

model Widget {
  id                    Int           @id @default(autoincrement())
  name                  String?
  description_title     String?
  description_content   String?
  image                 String?
  categories            Category[]    @relation("WidgetCategories")
  Fav_widget   Fav_widget[]
  createdAt             DateTime      @default(now())
}

model Fav_widget {
  id          Int      @id @default(autoincrement())
  shop        String?
  widgetId     Int
  widget       Widget      @relation(fields: [widgetId], references: [id])
  createdAt   DateTime @default(now())
  @@unique([widgetId, shop])
}

model Setting{
  id Int @id @default(autoincrement())
  admin_language String?
  lazy_load_images Boolean @default(false)
  change_setting  Boolean @default(false)
  color_theme String @default("light")
  global_customizations String? 
  shop String  @unique
}

model Analytics {
  id              Int        @id @default(autoincrement())
  activityId      Int
  activity        Activity      @relation(fields: [activityId], references: [id])
  pageUrl         String
  timestamp       DateTime @default(now())
  shop            String?
  appId           Int
  app             App      @relation(fields: [appId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Merchant {
  id        Int      @id @default(autoincrement())
  enabled   Boolean  @default(false)
  appId     Int
  app       App      @relation(fields: [appId], references: [id])
  shop      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([appId, shop])
}

model Announcement_bar {
  id          Int      @id @default(autoincrement())
  shop String?
  name        String?
  status Boolean @default(false)
  general_setting String?
  theme_style String?
  theme_setting String?
  createdAt   DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Inactive_tab_message {
  id          Int      @id @default(autoincrement())
  message        String?
  shop String  @unique
  createdAt   DateTime @default(now())
}


