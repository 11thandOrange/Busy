// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Category {
  id          Int           @id @default(autoincrement())
  content        String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  apps         App[]        @relation("AppCategories")
  widgets     Widget[]    @relation("WidgetCategories")
}
model App {
  id          Int           @id @default(autoincrement())
  name        String
  description_title String?
  description_content String?
  image       String?
  slug        String?
  categories  Category[]  @relation("AppCategories")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Merchant Merchant[]
}

model Merchant {
  id        Int      @id @default(autoincrement())
  enabled   Boolean  @default(false)
  appId     Int
  app       App      @relation(fields: [appId], references: [id])
  shop      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([appId, shop])
}

model Widget {
  id          Int      @id @default(autoincrement())
  name        String?
  description_title String?
  description_content String?
  image       String?
  categories  Category[]  @relation("WidgetCategories")
  createdAt   DateTime @default(now())
  Fav_widget   Fav_widget[]
}

model Fav_widget {
  id          Int      @id @default(autoincrement())
  shop        String?
  widgetId     Int
  widget       Widget      @relation(fields: [widgetId], references: [id])
  createdAt   DateTime @default(now())
  @@unique([widgetId, shop])
}

model Announcement_bar {
  id          Int      @id @default(autoincrement())
  shop String?
  name        String?
  status Boolean @default(false)
  general_setting String?
  theme_style String?
  theme_setting String?
  createdAt   DateTime @default(now())
}

model countdown_timer {
  id          Int      @id @default(autoincrement())
  general_setting        String?
  shop String?
  display_setting String?
  position String?
  createdAt   DateTime @default(now())
}

model Inactive_tab_message {
  id          Int      @id @default(autoincrement())
  message        String?
  shop String  @unique
  createdAt   DateTime @default(now())
}

model Cart_notice {
  id          Int      @id @default(autoincrement())
  primary_message        String?
  secondary_message        String?
  general_setting String
  shop String?
  createdAt   DateTime @default(now())
}